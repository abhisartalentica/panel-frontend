{"version":3,"sources":["apiService.js","SideBar.js","Header.js","const.js","PanelView.js","form.js","signIn.js","home.js","App.js","serviceWorker.js","index.js"],"names":["apiCall","url","data","method","fetch","mode","body","JSON","stringify","headers","then","response","json","get","r","post","args","put","SideBar","props","state","this","console","log","history","className","style","color","activeStyle","to","Component","Header","panel","name","skill","value","customStyles","content","top","left","right","bottom","marginRight","transform","width","PanelView","setEmail","e","setState","addEmail","target","afterOpenModal","subtitle","closeModal","modalIsOpen","result","params","skills","arr","filter","includes","map","i","id","addSkills","removePanel","key","splice","panelList","addPanel","raw","email","skill_set_ids","getPanel","getSkills","reduce","acc","concat","openModal","removeEmail","onClick","colspan","skill_name","toString","isOpen","onAfterOpen","onRequestClose","contentLabel","ref","type","onChange","length","options","onSelectOptions","Form","getSurveyDetails","surveyId","parseInt","daysOfInterviewRes","dates_array","re","label","submitResponse","comments","outstation","survey_id","alert","onToggle","checked","onToggleOutstation","onDateChange","daysOfInterview","createSurvey","Math","random","date","moment","format","setComments","isAdminUser","location","pathname","split","Array","fill","item","add","defaultFocus","defaultIndex","placeholder","rows","cols","setPassword","password","signIn","status","push","Home","getAllSurveys","surveys","resendInvitation","class","created_on","recepients","responders","disabled","App","path","component","exact","SignIn","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dd23a247.chunk.js","sourcesContent":["\n\nconst apiCall = (url = \"\", data = {}, method) =>\n  fetch( url, {\n    method,\n     mode : \"no-cors\",\n    body: JSON.stringify(data),\n    headers: {\n      'Content-Type': 'application/json'\n      // 'Content-Type': 'application/x-www-form-urlencoded',\n    },\n  }).then(response => response.json());\n\nconst get = url => fetch(url).then(r=>r.json());\nconst post = (...args) => apiCall(...args, \"POST\");\nconst put = (...args) => apiCall(...args, \"PUT\");\nexport default {\n  get: function(...args) {\n    return get(...args);\n  },\n  post: function(url, data, flag = false) {\n    return post(url, data);\n  },\n  put: function(...args) {\n    return put(...args);\n  }\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./App.css\";\n\nclass SideBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const { props } = this.props;\n    console.log(\"hre\",props.history)\n    return (\n      <div>\n        <div className=\"sidebar\">\n          <div className=\"header\">ProPanel</div>\n          <div className=\"options\">\n            <ul>\n              <Link style={{color: 'white'}} activeStyle={{color: 'red'}} to=\"./home\"><li>Home</li></Link>\n              <Link style={{color: 'white'}} activeStyle={{color: 'red'}}  to=\"./super\"><li>Manage</li></Link>\n              <Link style={{color: 'white'}} activeStyle={{color: 'red'}}><li>Analitics</li></Link>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SideBar;\n","import React from \"react\";\n\nconst Header = () => <div className=\"header-main\"></div>;\n\nexport default Header;\n","export const panel = [\n  {\n    name: \"karan bhandari\",\n    skill: [\"java\",\"c\"]\n  },\n  {\n    name: \"karan bhandari1\",\n    skill: [\"java\",\"c++\"]\n  },\n  {\n    name: \"karan bhandari2\",\n    skill: [\"java\"]\n  },\n  {\n    name: \"karan bhandari3\",\n    skill: [\"java\",\"python\"]\n  },\n  {\n    name: \"karan bhandari4\",\n    skill: [\"node\"]\n  },\n  {\n    name: \"karan bhandari5\",\n    skill: [\"python\"]\n  },\n  {\n    name: \"karan bhandari6\",\n    skill: [\"c++\",\"js\"]\n  }\n];\n\nexport const data = [{\n  name: 'one',\n  value: 'one'\n},\n{\n    name: 'two',\n    value: 'two'\n  },\n  {\n    name: 'three',\n    value: 'three'\n  },\n  {\n    name: 'four',\n    value: 'four'\n  },\n  {\n    name: 'five',\n    value: 'five'\n  },\n  {\n    name: 'six',\n    value: 'six'\n  }];","import React, { Component } from \"react\";\nimport { panel, data } from \"./const\";\nimport Modal from \"react-modal\";\nimport \"./App.css\";\nimport Multiselect from \"multiselect-dropdown-react\";\nimport raw from \"./apiService\";\n\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n    width: \"500px\"\n  }\n};\n//Modal.setAppElement(\"#yourAppElement\");\n\nclass PanelView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalIsOpen: false,\n      panelList: [],\n      skills: [],\n      addSkills: [],\n      addEmail: \"\",\n      removeEmail: \"\"\n    };\n  }\n  setEmail = e => this.setState({ addEmail: e.target.value });\n\n  afterOpenModal = () => {\n    // references are now sync'd and can be accessed.\n    this.subtitle.style.color = \"#f00\";\n  };\n\n  closeModal = () => {\n    this.setState({ modalIsOpen: false });\n  };\n\n  result = params => {\n    const { skills } = this.state;\n    console.log(params);\n    const arr = skills\n      .filter(skill => params.includes(skill.name))\n      .map(i => i.id);\n    this.setState({ addSkills: arr });\n  };\n\n  removePanel = key => {\n    panel.splice(key, 1);\n    this.setState({ panelList: panel });\n  };\n\n  addPanel = () => {\n    const { addEmail, addSkills } = this.state;\n    raw\n      .post(\"http://172.19.4.37:3000/add_modify_panel\", {\n        email: addEmail,\n        skill_set_ids: addSkills\n      })\n      .then(r => {\n        this.getPanel();\n        this.closeModal();\n      });\n  };\n\n  removePanel = (email) => {\n\n    raw\n      .post(\"http://172.19.4.37:3000/remove_panel\", {\n        email: email\n      })\n      .then(r => {\n        this.getPanel();\n      });\n  };\n\n  getPanel = () => {\n    raw.get(\"http://172.19.4.37:3000/get_panel_members\").then(r => {\n      this.setState({ panelList: r });\n    });\n  };\n\n  getSkills = () => {\n    raw.get(\"http://172.19.4.37:3000/skills\").then(r => {\n      console.log(\"here\", r);\n      this.setState({\n        skills: r.reduce((acc, i) => acc.concat({ ...i, value: i.name }), [])\n      });\n    });\n  };\n  openModal = () => {\n    this.setState({ modalIsOpen: true });\n    this.getSkills();\n  };\n\n  componentDidMount() {\n    this.getPanel();\n  }\n\n  render() {\n    const { panelList, skills } = this.state;\n    console.log(\"rrrr\", skills, data);\n    return (\n      <div className=\"tab_2 pt2\">\n        <div className=\"pt2 add_button\">\n          <button className=\"button-submit\" onClick={this.openModal}>\n            Add\n          </button>\n        </div>\n        <div className=\"tab_modal\">\n          <table>\n            <tr>\n              <th>Panel Name</th>\n              <th colspan=\"2\">Skills</th>\n            </tr>\n            <tbody>\n              {panelList.map((i, key) => {\n                return (\n                  <tr key={key}>\n                    <td>{i.name}</td>\n                    <td>{i.skill_name.toString()}</td>\n                    <td>\n                      {\" \"}\n                      <button\n                        className=\"button-submit\"\n                        onClick={() => this.removePanel(i.email)}\n                      >\n                        Remove\n                      </button>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n        <Modal\n          isOpen={this.state.modalIsOpen}\n          onAfterOpen={this.afterOpenModal}\n          onRequestClose={this.closeModal}\n          style={customStyles}\n          contentLabel=\"Example Modal\"\n        >\n          <div className=\"modal\">\n            <div className=\"tab_modal\">\n              <div>\n                <div ref={subtitle => (this.subtitle = subtitle)}>\n                  Update panel list\n                </div>\n              </div>\n              <div>\n                <button onClick={this.closeModal}>X</button>\n              </div>\n            </div>\n            <div className=\"pt2\">\n              You can add new panel or update skills of existing panel.\n            </div>\n            <div className=\"pt2\">Email</div>\n            <div className=\"pt2\">\n              <input\n                className=\"input_modal\"\n                type=\"text\"\n                onChange={this.setEmail}\n              />\n            </div>\n            <div className=\"pt2\">Skill</div>\n            <div>\n              {skills.length && (\n                <Multiselect options={skills} onSelectOptions={this.result} />\n              )}\n            </div>\n            <div className=\"pt2 modal_button\">\n              <button className=\"button-submit\" onClick={this.addPanel}>\n                Submit\n              </button>\n            </div>\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default PanelView;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport raw from \"./apiService\";\nimport moment from \"moment\";\nimport SideBar from \"./SideBar\";\nimport Header from \"./Header\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\nimport PanelView from \"./PanelView\";\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isAdminUser: !this.props.location.pathname.includes(\"@\"),\n      surveyId: this.props.location.pathname.split(\"/\"),\n      daysOfInterviewRes: [],\n      comments: \"\",\n      outstation: false,\n      daysOfInterview: Array(6)\n        .fill(0)\n        .map((item, i) => {\n          return {\n            label: moment()\n              .add(i * 6, \"days\")\n              .format(\"YYYY-MM-DD\"),\n            value: false\n          };\n        })\n    };\n  }\n\n  getSurveyDetails = () => {\n    const { surveyId } = this.state;\n    raw\n      .post(\"http://172.19.4.37:3000/surveys\", {\n        id: parseInt(surveyId[3])\n      })\n      .then(r => {\n        //   alert(r);\n        this.setState({\n          daysOfInterviewRes: r[0].dates_array.map(re => ({\n            label: re,\n            value: false\n          }))\n        });\n      });\n  };\n\n  submitResponse = () => {\n    const { surveyId, daysOfInterviewRes, comments,outstation } = this.state;\n    raw\n      .post(\"http://172.19.4.37:3000/respond\", {\n        survey_id: parseInt(surveyId[3]),\n        email: surveyId[2],\n        dates_array: daysOfInterviewRes.filter(i => i.value).map(i => i.label),\n        comments,\n        outstation\n      })\n      .then(r => {\n        alert(r);\n      });\n  };\n\n  componentDidMount() {\n    const { isAdminUser } = this.state;\n    if (!isAdminUser) {\n      this.getSurveyDetails();\n    }\n  }\n  onToggle = e => {\n    const daysOfInterviewRes = [...this.state.daysOfInterviewRes];\n    daysOfInterviewRes[e.target.id] = {\n      ...daysOfInterviewRes[e.target.id],\n      value: e.target.checked\n    };\n    this.setState({\n      daysOfInterviewRes\n    });\n  };\n  onToggleOutstation = e => {\n    console.log(\"errr\", e.target.checked);\n    this.setState({ outstation: e.target.checked });\n  };\n  onDateChange = e => {\n    const daysOfInterview = [...this.state.daysOfInterview];\n    daysOfInterview[e.target.id] = {\n      ...daysOfInterview[e.target.id],\n      label: e.target.value\n    };\n    this.setState({\n      daysOfInterview\n    });\n  };\n\n  createSurvey = () => {\n    raw\n      .post(\"http://172.19.4.37:3000/create_survey\", {\n        name: `Survey-${Math.random() * 100}`,\n        date: moment().format(\"YYYY-MM-DD HH:mm:ss\"),\n        dates_array: this.state.daysOfInterview.map(i => i.label)\n      })\n      .then(r => {\n        alert(r);\n        console.log(\"here\", r);\n      });\n  };\n  setComments = e => {\n    this.setState({ comments: e.target.value });\n  };\n  render() {\n    const { daysOfInterview, isAdminUser, daysOfInterviewRes } = this.state;\n    console.log(\"here\", daysOfInterviewRes);\n\n    const panel_desc = \"Please mark your availability on following dates\";\n    const admin_desc = \"Customize the dates for interview\";\n    return (\n      <div className=\"main_container\">\n        {isAdminUser && <SideBar props={this.props} />}\n        <div className=\"body-content\">\n          <Header />\n          <div className=\"pt2\">\n            <Tabs defaultFocus={true} defaultIndex={1}>\n              <TabList>\n                <Tab>Form</Tab>\n                {isAdminUser && <Tab>Panel</Tab>}\n              </TabList>\n\n              <TabPanel className=\"tab_1 pt2\">\n                <div className=\"container_1\">\n                  <div className=\"availablity\">\n                    {isAdminUser ? `${admin_desc}` : `${panel_desc}`}\n                  </div>\n                  {isAdminUser\n                    ? daysOfInterview.map((i, key) => (\n                        <div className=\"check_box\">\n                          <input\n                            type=\"date\"\n                            className=\"input_date\"\n                            value={i.label}\n                            id={key}\n                            onChange={this.onDateChange}\n                          />\n                        </div>\n                      ))\n                    : daysOfInterviewRes.map((i, key) => (\n                        <div className=\"check_box\">\n                          <input\n                            className=\"checkbox\"\n                            type=\"checkbox\"\n                            id={key}\n                            name=\"lastname\"\n                            placeholder=\"Your last name..\"\n                            onClick={this.onToggleOutstation}\n                          />\n                          <label>{i.label}</label>\n                        </div>\n                      ))}\n                  {!isAdminUser && (\n                    <div>\n                      <div className=\"pt2\">\n                        <input\n                          className=\"checkbox\"\n                          type=\"checkbox\"\n                          name=\"lastname\"\n                          placeholder=\"Your last name..\"\n                          onClick={this.onToggleOutstation}\n                        />\n                        <label>Outsation ready</label>\n                      </div>\n                      <div className=\"pt2\">Comments</div>\n                      <div className=\"pt2\">\n                        <textarea\n                          onChange={this.setComments}\n                          rows=\"10\"\n                          cols=\"60\"\n                        ></textarea>\n                      </div>\n                    </div>\n                  )}\n                  <div className=\"pt1\">\n                    <button\n                      className=\"button-primary\"\n                      onClick={() =>\n                        isAdminUser\n                          ? this.createSurvey()\n                          : this.submitResponse()\n                      }\n                    >\n                      Submit\n                    </button>\n                  </div>\n                </div>\n              </TabPanel>\n              <TabPanel>\n                <PanelView></PanelView>\n              </TabPanel>\n            </Tabs>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Form;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport raw from \"./apiService\";\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n  }\n  setEmail = email => this.setState({ email });\n  setPassword = password => this.setState({ password });\n\n  signIn = () => {\n    const { email, password } = this.state;\n    raw\n      .post(\"http://172.19.4.37:3000/validate\", {\n        email: email,\n        password: password\n      })\n      .then(r => {\n        if (r.status) this.props.history.push(\"/home\");\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"container_login\">\n        <div className=\"login\"> LOGIN</div>\n        <div className=\"pt2\">\n          <input\n            id=\"email\"\n            placeholder=\"username\"\n            label=\"Email Address\"\n            name=\"email\"\n            type=\"text\"\n            className=\"input_login\"\n            onChange={e => this.setEmail(e.target.value)}\n          />\n        </div>\n\n        <div>\n          <input\n            id=\"password\"\n            placeholder=\"password\"\n            label=\"password\"\n            name=\"password\"\n            type=\"password\"\n            className=\"input_login\"\n            onChange={e => this.setPassword(e.target.value)}\n          />\n        </div>\n        <div className=\"pt2\">\n          <button className=\"button-secondary\" onClick={this.signIn}>\n            LOGIN\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Form;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport raw from \"./apiService\";\nimport SideBar from \"./SideBar\";\nimport Header from \"./Header\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      surveys: []\n    };\n  }\n\n  getAllSurveys = () => {\n    raw\n      .get(\"http://172.19.4.37:3000/get_all_surveys\")\n      .then(r => this.setState({ surveys: r }));\n  };\n\n  resendInvitation = id => {\n    raw\n      .post(\"http://172.19.4.37:3000/send_reminder_mails\", { survey_id: id })\n      .then(r => alert(r));\n  };\n\n  componentDidMount() {\n    this.getAllSurveys();\n  }\n  render() {\n    const { surveys } = this.state;\n    return (\n      <div>\n        <div class=\"main_container\">\n          <SideBar props={this.props}></SideBar>\n          <div className=\"body-content\">\n            <Header />\n\n            <div>\n              <table>\n                <tr>\n                  <th>Name</th>\n                  <th>Created on</th>\n                  <th>Recepients</th>\n                  <th>Responders</th>\n                  <th>Resend invitation</th>\n                </tr>\n                <tbody>\n                  {surveys.map((i, key) => {\n                    return (\n                      <tr key={key}>\n                        <td>{i.name}</td>\n                        <td>{i.created_on}</td>\n                        <td>{i.recepients.split(\",\").length}</td>\n                        <td>{i.responders.split(\",\").length-1}</td>\n\n                        <td>\n                          <button\n                            className=\"button-submit\"\n                            onClick={() => this.resendInvitation(i.id)}\n                            disabled ={i.recepients.split(\",\").length-i.responders.split(\",\").length+1===0}\n                          >\n                            Resend\n                          </button>\n                        </td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport \"./App.css\";\nimport Form from \"./form\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport SignIn from \"./signIn\";\nimport Home from \"./home\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n\n          <Route path=\"/super\" component={Form} exact/>\n          <Route path=\"/form/:email\" component={Form} />\n          <Route path=\"/\" component={SignIn} exact />\n          <Route path=\"/home\" component={Home} exact />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}